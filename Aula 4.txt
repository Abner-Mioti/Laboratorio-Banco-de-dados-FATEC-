-- Slide 144 Aula 4 --

SELECT c.nome,c.sobrenome,p.nm_produto AS produto, tp.nm_tipo_produto AS tipo 
FROM tb_clientes c
INNER JOIN tb_compras co USING (id_cliente)
INNER JOIN tb_produtos p USING (id_produto)
INNER JOIN tb_tipos_produtos tp USING (id_tipo_produto)
ORDER BY p.nm_produto;

SELECT p.nm_produto AS produto, tp.nm_tipo_produto AS tipo FROM tb_produtos p
LEFT OUTER JOIN tb_tipos_produtos tp USING(id_tipo_produto)
ORDER BY p.nm_produto;

SELECT p.nm_produto AS produto, tp.nm_tipo_produto AS tipo FROM tb_produtos p
RIGHT OUTER JOIN tb_tipos_produtos tp USING(id_tipo_produto)
ORDER BY p.nm_produto;

SELECT p.nm_produto AS produto, tp.nm_tipo_produto AS tipo FROM tb_produtos p
FULL OUTER JOIN tb_tipos_produtos tp USING(id_tipo_produto)
ORDER BY p.nm_produto;

SELECT f.nome || ' ' || f.sobrenome || ' trabalha para ' || g.nome FROM tb_funcionarios f
INNER JOIN tb_funcionarios g ON(f.id_gerente = g.id_funcionario)
ORDER BY f.nome;

SELECT *
FROM tb_tipos_produtos
CROSS JOIN tb_produtos;

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produto = &v_id_produto;

SELECT nm_produto, &v_coluna
FROM &v_tabela
WHERE &v_coluna = &v_id_produto;

SELECT nm_produto, &&v_coluna
FROM &v_tabela
WHERE &&v_coluna = &v_id_produto;

DEFINE v_id_produto = 7;

SELECT nm_produto, id_produto
FROM tb_produtos
WHERE id_produto = &v_id_produto;

ACCEPT v_id NUMBER FORMAT 99 PROMPT 'Entre com o ID';

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produto = &v_id;

DEFINE v_id_produto = 7;

SELECT nm_produto, id_produto
FROM tb_produtos
WHERE id_produto = &v_id_produto;

UNDEFINE v_id_produto;

-- SCRIPT Criado pelo OPEN SQL Worksheet
-- Salvo em \home\oracle

-- SCRIPT 1 --

SET ECHO OFF
SET VERIFY OFF

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produtos = &v_id_produto;

-- SCRIPT 2 --

SET ECHO OFF
SET VERIFY OFF

ACCEPT v_id_produto NUMBER FORMAT 99 PROMPT ' Entre com o ID do produto ';

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produto = &v_id_produto;

-- SCRIPT 3 --

SET ECHO OFF
SET VERIFY OFF

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produto = &1;

-- SCRIPT 4 --

SET ECHO OFF
SET VERIFY OFF

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produto = &1
AND preco > &2;


-- Invocando o Script --

@\home\oracle\teste_1.sql

@\home\oracle\teste_2.sql

@\home\oracle\teste_3.sql 3

@\home\oracle\teste_4.sql 6 79.99

SELECT 'DROP TABLE' || table_name || ';'
FROM user_table;

-- Exercicio 1 Aula 4--

CREATE TABLE tb_teste(
ID        INTEGER,
valor     VARCHAR2(100)
);

BEGIN

  FOR v_loop IN 1..100000 LOOP
    INSERT INTO tb_teste(ID, valor)
    VALUES (v_loop, 'DBA_' || v_loop);
    END LOOP;

END;

SELECT * FROM tb_teste ORDER BY 1;

TRUNCATE TABLE tb_teste;

-- Exercicio 2 Aula 4 --

DROP TABLE tb_cliente_teste

CREATE TABLE tb_cliente_teste(
id_cliente    INTEGER,
ds_cliente    VARCHAR2(40),
nm_cliente    VARCHAR(40),
valor         NUMERIC,
fg_ativo      INTEGER,
PRIMARY KEY(id_cliente)
);

DROP PROCEDURE manipula_dados;

create or replace
PROCEDURE manipula_dados(
p_id_cliente IN tb_cliente_teste.id_cliente%TYPE,
p_descricao IN tb_cliente_teste.ds_cliente%TYPE,
p_nome IN tb_cliente_teste.nm_cliente%TYPE,
p_valor IN tb_cliente_teste.valor%TYPE,
p_fg_ativo IN tb_cliente_teste.fg_ativo%TYPE,
p_opcao IN CHAR
) AS
v_controle INTEGER;

BEGIN

SELECT COUNT(*) INTO v_controle
FROM tb_cliente_teste
WHERE id_cliente = p_id_cliente
AND fg_ativo = 1;

IF(p_opcao = 'I') THEN
  IF(v_controle !=1)THEN
    INSERT INTO tb_cliente_teste(id_cliente, ds_cliente, nm_cliente, valor, fg_ativo)
    VALUES (p_id_cliente, p_descricao, p_nome, p_valor, p_fg_ativo);
    COMMIT;
    dbms_output.put_line('Cliente inserido com sucesso');
    
    ELSE
      dbms_output.put_line('ID do cliente já existe');
  END IF;
END IF;

IF(p_opcao = 'U') THEN
  IF(v_controle = 1) THEN
    UPDATE tb_cliente_teste SET
      ds_cliente = p_descricao,
      nm_cliente = p_nome,
      valor = p_valor,
      fg_ativo = p_fg_ativo
    WHERE id_cliente = p_id_cliente
    AND fg_ativo = 1;
    
    COMMIT;
    dbms_output.put_line('Cliente alterado com sucesso');
    
  ELSE
    dbms_output.put_line('ID do cliente não existe');
  END IF;
END IF;

-- opcao = D (DELETE)
IF(p_opcao = 'D')THEN
  IF(v_controle = 1)THEN
  DELETE
  FROM tb_cliente_teste
  WHERE id_cliente = p_id_cliente
  AND fg_ativo = 1;
  
  COMMIT;
  
  dbms_output.put_line ('Cliente excluido com sucesso');
  
  ELSE
    dbms_output.put_line('ID do cliente não existe');
  END IF;
END IF;

EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
END manipula_dados;

CALL manipula_dados(1, 'Cliente 1', 'Nome Cliente 1', 22.33, 1, 'I');

CALL manipula_dados(2, 'Cliente 2', 'Nome Cliente 2', 99.99, 1, 'I');

CALL manipula_dados(2, 'Cliente - Alterado hoje', 'Alterado', 99.99, 1, 'U');

CALL manipula_dados(2, NULL, NULL, NULL, NULL, 'D');

DEFINE v_id_produto = 7;

SELECT nm_produto, id_produto
FROM tb_produtos
WHERE id_produto = &v_id_produto;

ACCEPT v_id NUMBER FORMAT 99 PROMPT 'Entre com o ID';

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produto = &v_id;

DEFINE v_id_produto = 7;

SELECT nm_produto, id_produto
FROM tb_produtos
WHERE id_produto = &v_id_produto;

UNDEFINE v_id_produto;

-- SCRIPT Criado pelo OPEN SQL Worksheet
-- Salvo em \home\oracle

-- SCRIPT 1 --

SET ECHO OFF
SET VERIFY OFF

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produtos = &v_id_produto;

-- SCRIPT 2 --

SET ECHO OFF
SET VERIFY OFF

ACCEPT v_id_produto NUMBER FORMAT 99 PROMPT ' Entre com o ID do produto ';

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produto = &v_id_produto;

-- SCRIPT 3 --

SET ECHO OFF
SET VERIFY OFF

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produto = &1;

-- SCRIPT 4 --

SET ECHO OFF
SET VERIFY OFF

SELECT id_produto, nm_produto, preco
FROM tb_produtos
WHERE id_produto = &1
AND preco > &2;


-- Invocando o Script --

@\home\oracle\teste_1.sql

@\home\oracle\teste_2.sql

@\home\oracle\teste_3.sql 3

@\home\oracle\teste_4.sql 6 79.99

SELECT 'DROP TABLE' || table_name || ';'
FROM user_table;